// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TorrentGrease.Data;

namespace TorrentGrease.Data.Migrations
{
    [DbContext(typeof(TorrentGreaseDbContext))]
    [Migration("20191126155220_AddPolicyDescription")]
    partial class AddPolicyDescription
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("TorrentGrease.Shared.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("PolicyId");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("TorrentGrease.Shared.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConditionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LogicalOperator")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PolicyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("PolicyId");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("TorrentGrease.Shared.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(300);

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("TorrentGrease.Shared.Tracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("TrackerUrls")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tracker");
                });

            modelBuilder.Entity("TorrentGrease.Shared.TrackerPolicy", b =>
                {
                    b.Property<int>("TrackerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PolicyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TrackerId", "PolicyId");

                    b.HasIndex("PolicyId");

                    b.ToTable("TrackerPolicy");
                });

            modelBuilder.Entity("TorrentGrease.Shared.Action", b =>
                {
                    b.HasOne("TorrentGrease.Shared.Policy", null)
                        .WithMany("Actions")
                        .HasForeignKey("PolicyId");
                });

            modelBuilder.Entity("TorrentGrease.Shared.Condition", b =>
                {
                    b.HasOne("TorrentGrease.Shared.Policy", null)
                        .WithMany("Conditions")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TorrentGrease.Shared.TrackerPolicy", b =>
                {
                    b.HasOne("TorrentGrease.Shared.Policy", "Policy")
                        .WithMany("TrackerPolicies")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TorrentGrease.Shared.Tracker", "Tracker")
                        .WithMany("TrackerPolicies")
                        .HasForeignKey("TrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
