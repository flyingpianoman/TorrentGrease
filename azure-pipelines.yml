trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'core'
    configFilePath: './GitVersion.yml'

- task: Docker@2
  displayName: Docker build
  inputs:
    containerRegistry: 'Dockerhub'
    repository: 'flyingpianoman/torrent-grease'
    command: 'build'
    Dockerfile: 'TorrentGrease.Server/Dockerfile'
    buildContext: '.'
    arguments: '--build-arg VERSION=$(GitVersion.NugetVersion)'
    tags: |
      $(GitVersion.NugetVersion)
      latest

- task: BuildQualityChecks@6
  inputs:
    checkWarnings: true
    warningFailOption: 'fixed'
    warningThreshold: '0'
    warningFilters: '[wW]arning'

- task: DockerCompose@0
  displayName: Docker-compose up
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Dockerhub'
    dockerComposeFile: 'docker-compose/docker-compose.yml'
    additionalDockerComposeFiles: 'docker-compose.ci.yml'
    dockerComposeFileArgs: 'VERSION=$(GitVersion.NugetVersion)'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up -d'

- task: DotNetCoreCLI@2
  displayName: dotnet test SpecificationTest
  inputs:
    command: 'test'
    projects: 'SpecificationTest/SpecificationTest.csproj'
    testRunTitle: 'SpecificationTest'

- task: DockerCompose@0
  displayName: Docker-compose logs
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Dockerhub'
    dockerComposeFile: 'docker-compose/docker-compose.yml'
    additionalDockerComposeFiles: 'docker-compose.ci.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'logs'

- task: Docker@2
  displayName: Docker push
  inputs:
    containerRegistry: 'Dockerhub'
    repository: 'flyingpianoman/torrent-grease'
    command: 'push'
    tags: |
      $(GitVersion.NugetVersion)
      latest

  